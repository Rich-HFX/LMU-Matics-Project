NDContentPage.OnToolTipsLoaded({62:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype62\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">const int</span> callbackClearTimer</div></div><div class=\"TTSummary\">The amount of time between checks of responseCallbacks to eliminate expired ResponseCallbacks. Used in ClearUnresponsiveCallbacks.</div></div>",63:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype63\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public int</span> actionCullToCount</div></div><div class=\"TTSummary\">How many non-essential InputActions should the actionQueue be trimmed <b>to</b> per frame. This is used to ensure the Client can keep up with the Events sent over the WebSocket.</div></div>",64:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype64\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> ConcurrentQueue&lt;InputAction&gt; actionQueue</div></div><div class=\"TTSummary\">A queue of InputActions that have been received from the Service.</div></div>",65:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype65\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> ConcurrentQueue&lt;WebSocketResponse&gt; responseQueue</div></div><div class=\"TTSummary\">A queue of WebSocketResponses that have been received from the Service.</div></div>",66:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype66\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> Dictionary&lt;<span class=\"SHKeyword\">string</span>, ResponseCallback&gt; responseCallbacks</div></div><div class=\"TTSummary\">A dictionary of unique request IDs and ResponseCallbacks that represent requests that are awaiting response from the Service.</div></div>",67:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype67\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> ConcurrentQueue&lt;ConfigState&gt; configStateQueue</div></div><div class=\"TTSummary\">A queue of ConfigState that have been received from the Service.</div></div>",68:"<div class=\"NDToolTip TVariable LCSharp\"><div id=\"NDPrototype68\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public</span> Dictionary&lt;<span class=\"SHKeyword\">string</span>, ConfigStateCallback&gt; configStateCallbacks</div></div><div class=\"TTSummary\">A dictionary of unique request IDs and ConfigStateCallbacks that represent requests that are awaiting response from the Service.</div></div>",75:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype75\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> HandleResponse(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">WebSocketResponse&nbsp;</td><td class=\"PName last\">_response</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Checks the dictionary of responseCallbacks for a matching request ID. If there is a match, calls the callback action in the matching ResponseCallback.</div></div>",77:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype77\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> HandleConfigState(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ConfigState&nbsp;</td><td class=\"PName last\">_configState</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Checks the dictionary of configStateCallbacks for a matching request ID. If there is a match, calls the callback action in the matching ConfigStateCallback.</div></div>",80:"<div class=\"NDToolTip TFunction LCSharp\"><div id=\"NDPrototype80\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">IEnumerator ClearUnresponsiveCallbacks()</div></div><div class=\"TTSummary\">Waits for callbackClearTimer seconds and clears all ResponseCallbacks that are expired from responseCallbacks. Also clears all ConfigStateCallback that are expired from configStateCallbacks.</div></div>",88:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype88\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public enum</span> HandPresenceState</div></div></div>",101:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype101\"><div class=\"CPEntry TStruct Current\"><div class=\"CPPrePrototypeLine\"><span class=\"SHMetadata\">[Serializable]</span></div><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">Ultraleap.&#8203;TouchFree.&#8203;Tooling.&#8203;Connection.</span>&#8203;ConfigState</div></div></div><div class=\"TTSummary\">This is the structure of data received when requesting the current state of the configuration files from the Service.</div></div>",108:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype108\"><div class=\"CPEntry TStruct Current\"><div class=\"CPPrePrototypeLine\"><span class=\"SHMetadata\">[Serializable]</span></div><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">Ultraleap.&#8203;TouchFree.&#8203;Tooling.&#8203;Connection.</span>&#8203;WebSocketResponse</div></div></div><div class=\"TTSummary\">The structure seen when the Service responds to a request. This is to verify whether it was successful or not and will include the original request if it fails, to allow for troubleshooting.</div></div>",116:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype116\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">Ultraleap.&#8203;TouchFree.&#8203;Tooling.&#8203;Connection.</span>&#8203;ResponseCallback</div></div></div><div class=\"TTSummary\">Used by MessageReceiver to wait for a WebSocketResponse from the Service. Owns an action with a WebSocketResponse as a parameter to allow users to deal with failed WebSocketResponses. Stores a timestamp of its creation so the response has the ability to timeout if not seen within a reasonable timeframe.</div></div>",127:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype127\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">Ultraleap.&#8203;TouchFree.&#8203;Tooling.&#8203;Connection.</span>&#8203;ConfigStateCallback</div></div></div><div class=\"TTSummary\">Used by MessageReceiver to wait for a ConfigState from the Service. Owns an action with a ConfigState as a parameter to allow users to make use of the new ConfigState. Stores a timestamp of its creation so the response has the ability to timeout if not seen within a reasonable timeframe.</div></div>",176:"<div class=\"NDToolTip TClass LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype176\"><div class=\"CPEntry TClass Current\"><div class=\"CPPrePrototypeLine\"><span class=\"SHMetadata\">[DefaultExecutionOrder(-1)]</span></div><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span></div><div class=\"CPName\"><span class=\"Qualifier\">Ultraleap.&#8203;TouchFree.&#8203;Tooling.</span>&#8203;InputActionManager</div></div></div><div class=\"TTSummary\">The manager for all InputActions to be handled and distributed. This runs the received data through any referenced InputActionPlugins and finaly distributes the data via the&nbsp; TransmitInputAction event which should be listened to by any class hoping to make use of incoming InputActions.</div></div>",293:"<div class=\"NDToolTip TStruct LCSharp\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype293\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">public</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\"><span class=\"Qualifier\">Ultraleap.&#8203;TouchFree.&#8203;Tooling.</span>&#8203;InputAction</div></div></div><div class=\"TTSummary\">The Tooling representation of an InputAction. This is used to pass key information relating to an action that has happened on the Service.</div></div>",313:"<div class=\"NDToolTip TEnumeration LCSharp\"><div id=\"NDPrototype313\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">public enum</span> InputType</div></div></div>"});